library(readr)
filename <- "X:\\Data\\SCOTT\\2017-05-10 GCaMP6f\\2017-05-10 GCaMP6f PFC GABA cre\\2017-05-23 cell2.csv"
filename <- gsub("\\\\","/",filename)
cell.dt <- read_csv(filename)
View(cell.dt)
colnames(cell.dt)[colnames(cell.dt)=="X1"] <- "frame"   #renaming column
ROImeans.dt <- cell.dt[,2:length(cell.dt), drop=FALSE]   # Keeps only "Mean_" columns (ROI mean values)
library(reshape2)
melted.df <- melt(cell.dt, id.vars='frame')   #restructuring the data
df.m <- melt(cell.dt, id.vars='frame')   #restructuring the data
library(reshape2)
install.packages("reshape2")
install.packages("reshape2")
install.packages("readr")
install.packages("readr")
library(reshape2)
df.m <- melt(cell.dt, id.vars='frame')   #restructuring the data
View(df.m)
colnames(df.m) <- c("ROI", "t", "Ft")  #renaming columns
head(df.m)
df.m <- melt(cell.dt, id.vars='frame')   #restructuring the data
View(df.m)
colnames(df.m) <- c("t", "ROI", "Ft")  #renaming columns
head(df.m)
ggplot(data=df.m, aes(x=t, y=Ft, colour=ROI)) +
geom_point(size=0.01)
install.packages("ggplot2")
library(ggplot2)
ggplot(data=df.m, aes(x=t, y=Ft, colour=ROI)) +
geom_point(size=0.01)
Fbnorm.func <- function(Ft, Fb){
result <- (Ft - Fb)/Fb
return(result)
}
cell.mat <- as.matrix(cell.dt)
Fb.range <- cell.dt[2500:3400, , drop=FALSE]
Fb.frames <- Fb.range[ ,1, drop=FALSE]
Fb.values <- Fb.range[ ,2:length(Fb.range), drop=FALSE]
Fb.range.mat <- cell.mat[2500:3200, , drop=FALSE]
Fb.values.mat <- as.matrix(Fb.values)
Fb.values.mat <- as.matrix(Fb.values)
Fb.df <- as.data.frame(apply(Fb.values.mat, 2, mean))
colnames(Fb.df) <- c("Fb")   #renaming column
View(Fb.df)
library(readr)
filename <- "X:\\Data\\SCOTT\\2017-05-10 GCaMP6f\\2017-05-10 GCaMP6f PFC GABA cre\\2017-05-23 cell2.csv"
filename <- gsub("\\\\","/",filename)
cell.dt <- read_csv(filename)
colnames(cell.dt)[colnames(cell.dt)=="X1"] <- "frame"   #renaming column
ROImeans.dt <- cell.dt[,2:length(cell.dt), drop=FALSE]   # Keeps only "Mean_" columns (ROI mean values)
#################################
#install.packages("reshape2")
library(reshape2)
df.m <- melt(cell.dt, id.vars='frame')   #restructuring the data
colnames(df.m) <- c("t", "ROI", "Ft")  #renaming columns
head(df.m)
# Plot data to choose b values: #
#install.packages("ggplot2")
library(ggplot2)
ggplot(data=df.m, aes(x=t, y=Ft, colour=ROI)) +
geom_point(size=0.01)
##############################
#### Creating a function #####
# dF/Fb = (Ft-Fb)/Fb #
# Fb = mean(Ft_b1:b2) #
# b1 = Ft at frame 2500
# b2 = Ft at frame 3400
Fbnorm.func <- function(Ft, Fb){
result <- (Ft - Fb)/Fb
return(result)
}
cell.mat <- as.matrix(cell.dt)
Fb.range <- cell.dt[2500:3400, , drop=FALSE]
Fb.frames <- Fb.range[ ,1, drop=FALSE]
library(readr)
filename <- "X:\\Data\\SCOTT\\2017-05-10 GCaMP6f\\2017-05-10 GCaMP6f PFC GABA cre\\2017-05-23 cell2.csv"
filename <- gsub("\\\\","/",filename)
cell.dt <- read_csv(filename)
colnames(cell.dt)[colnames(cell.dt)=="X1"] <- "frame"   #renaming column
ROImeans.dt <- cell.dt[,2:length(cell.dt), drop=FALSE]   # Keeps only "Mean_" columns (ROI mean values)
#################################
#install.packages("reshape2")
library(reshape2)
df.m <- melt(cell.dt, id.vars='frame')   #restructuring the data
colnames(df.m) <- c("t", "ROI", "Ft")  #renaming columns
head(df.m)
# Plot data to choose b values: #
#install.packages("ggplot2")
library(ggplot2)
ggplot(data=df.m, aes(x=t, y=Ft, colour=ROI)) +
geom_point(size=0.01)
##############################
#### Creating a function #####
# dF/Fb = (Ft-Fb)/Fb #
# Fb = mean(Ft_b1:b2) #
# b1 = Ft at frame 2500
# b2 = Ft at frame 3400
Fbnorm.func <- function(Ft, Fb){
result <- (Ft - Fb)/Fb
return(result)
}
means.mat <- as.matrix(ROImeans.dt)
mean.of.ROImeans.df <- as.data.frame(apply(means.mat, 2, mean))
View(mean.of.ROImeans.df)
View(means.mat)
View(ROImeans.dt)
View(means.mat)
listofROIs <- as.list(colnames(means.mat))
listofROIs1 <- as.character(listofROIs)
listofROIs2.df <- as.data.frame(listofROIs1)
colnames(listofROIs2.df) <- c("ROI")
View(listofROIs2.df)
stdev.of.ROImeans.df <- as.data.frame(apply(means.mat, 2, sd))
colnames(stdev.of.ROImeans.df) <- c("stdev(Ft)")
ROIstats.df <- cbind(listofROIs2.df, mean.of.ROImeans.df, stdev.of.ROImeans.df)
View(ROIstats.df)
colnames(mean.of.ROImeans.df) <- c("mean(Ft)")
ROIstats.df <- cbind(listofROIs2.df, mean.of.ROImeans.df, stdev.of.ROImeans.df)
View(ROIstats.df)
means.mat <- as.matrix(ROImeans.dt)
cell.mat <- as.matrix(cell.dt)
Fb.range <- cell.dt[2500:3400, , drop=FALSE]
Fb.frames <- Fb.range[ ,1, drop=FALSE]
Fb.values <- Fb.range[ ,2:length(Fb.range), drop=FALSE]
Fb.values.mat <- as.matrix(Fb.values)
View(Fb.frames)
View(Fb.range)
View(Fb.frames)
Fb.df <- as.data.frame(apply(Fb.values.mat, 2, mean))
colnames(Fb.df) <- c("Fb")   #renaming column
View(Fb.df)
View(Fb.df)
View(listofROIs2.df)
Fb.df1 <- cbind(listofROIs2.df, Fb.df)
View(Fb.df1)
df.m1 <- merge(df.m, Fb.df1, by="ROI")   # Adds 'Fb' column to the data
View(df.m1)
Fbnorm.func <- function(Ft, Fb){
result1 <- (Ft - Fb)/Fb
return(result1)
}
View(Fbnorm.func)
df.m1$result1 <- Fbnorm.func(df.m1$Ft, df.m1$Fb)   #running function (results are added as a new column of data labeled "result1")
colnames(df.m1)[colnames(df.m1)=="result1"] <- "dF/Fb"   #renaming column
merged.all.df <- merge(df.m1, ROIstats.df, by="ROI")
finaldata <- merged.all.df
head(finaldata)
ggplot(data=finaldata, aes(x=t, y=df.m1[['dF/Fb']], colour=ROI)) +
geom_point(size=0.01)
ggplot(data=finaldata, aes(x=t, y=(y=df.m1[['dF/Fb']])*100, colour=ROI)) +
geom_point(size=0.01)
ggplot(data=finaldata, aes(x=t, y=(df.m1[['dF/Fb']])*100, colour=ROI)) +
geom_point(size=0.01)
ggplot(data=finaldata, aes(x=t, y=('dF/Fb')*100, colour=ROI)) +
geom_point(size=0.01)
ggplot(data=finaldata, aes(x=t, y=(dF/Fb)*100, colour=ROI)) +
geom_point(size=0.01)
ggplot(data=finaldata, aes(x=t, y=(finaldata[['dF/Fb']])*100, colour=ROI)) +
geom_point(size=0.01)
rplot <- ggplot(data=finaldata, aes(x=t, y=(finaldata[['dF/Fb']])*100, colour=ROI)) +
geom_point(size=0.02)
rplot + labs(y = "dF/F (%)") +
labs(x = "Time (frames/ms)") +
labs(title = expression(paste("GCaMP6f: Ca"^"2+"*" Activity")), subtitle = "Run 2: TTX + TGOT") +
theme(plot.title = element_text(hjust = 0.5)) +
#scale_fill_continuous(guide = guide_legend(keywidth = 7, keyheight = 12)) +
scale_x_continuous(expand = c(0.006,0))
tiff(filename = "2017-05-23_run2_d-graph.tiff",
width = 1280, height = 930, units = "px")
dev.off()
tiff(rplot, filename = "2017-05-23_run2_d-graph.tiff",
width = 1280, height = 930, units = "px")
dev.off()
dev.off()
