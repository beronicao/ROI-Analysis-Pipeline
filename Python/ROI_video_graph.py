import matplotlib.pyplot as plt
import numpy as np
np.set_printoptions(suppress=True) # don't show exponential notation
import os

def loadCSV(fname, labelsToo=False):
    """
    load a CSV generated by ImageJ and return it as a numpy array.
    Returns data in the same shape as it exists in the CSV.
    """
    print("loading data from:",fname)
    with open(fname) as f:
        raw=f.readlines()
    if not raw[0].startswith(" ,"):
        for i in range(10):
            print("WARNING: This doesn't look like an ImageJ export CSV!")
    labels=raw[0].strip().split(",")
    labels[0]="frame"
    raw=raw[1:]
    nRows=len(raw)
    nCols=len(labels)
    data=np.empty((nRows,nCols))
    for row in range(nRows):
        data[row]=raw[row].split(",")
    print("loaded %d lines of data from %d ROIs"%(nRows,nCols-1))
    if labelsToo:
        return [data,labels]
    return data

if __name__=="__main__":

    # USER INPUTS THIS INFORMATION
    fname="../data/2017-05-23 cell2.csv"
    secPerFrame=0.5
    b1Frame=3200
    b2Frame=3500

    # ANALYZE DATA
    data=np.transpose(loadCSV(fname))
    times=data[0] # times in frames
    #times=times*secPerFrame/60 # times in minutes
    data[0]=times

    for colNum,col in enumerate(data):
        if colNum is 0: continue
        baseline=np.average(col[b1Frame:b2Frame])
        data[colNum]=data[colNum]-baseline

    # FIGURE - AVERAGE AND STDEV
    plt.figure(figsize=(8,6))
    avg=np.mean(data[1:],axis=0)
    err=np.std(data[1:],axis=0)
    plt.fill_between(data[0],avg-err,avg+err,alpha=.1,lw=0,label="stdev")
    plt.plot(data[0],avg,label="avg (n=%d)"%len(data[1:]))
    plt.grid(alpha=.5)
    plt.axhline(0,color='k',ls='--')
    plt.axvspan(b1Frame,b2Frame,color='g',alpha=.1,lw=0,label='baseline')
    plt.legend(fontsize=8)
    plt.ylabel("baseline subtracted pixel value (AFU)")
    plt.xlabel("frame number")
    plt.title("delta AFU[]")
    plt.title(r'$\Delta$'+" pixel value (AFU) [%s]"%os.path.basename(fname))
    plt.savefig("01-raw.png",dpi=100)

    print("DONE")